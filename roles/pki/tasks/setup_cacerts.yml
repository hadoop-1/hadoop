---

- name: Copy {{ad_cert_name}} 
  copy:
    src: '{{artifacts_dest}}{{ad_cert_name}}'
    dest: "/etc/pki/ca-trust/source/anchors/{{ad_cert_name.split('.')[0]}}.pem"
    remote_src: yes
    
- name: update ca 
  shell: |
        update-ca-trust force-enable
        update-ca-trust extract 
        update-ca-trust check
          
- name: import cert 
  shell: |
        /usr/bin/keytool -import -file /etc/pki/ca-trust/source/anchors/{{ad_cert_name.split('.')[0]}}.pem \
        -alias ambari-server -keystore ambari-server-truststore -storepass {{ca_cert_pass}} -v -noprompt
      
- name: create truststore
  shell: |
       PYTHONPATH=$PYTHONPATH:/usr/lib/ambari-server/lib /usr/sbin/ambari-server.py setup-security \
       --security-option=setup-truststore \
       --truststore-path=/var/lib/ambari-server/keys/cacerts.jks \
       --truststore-type=jks --truststore-password=123456
  become_user: root

- name: import truststore
  shell: |
       PYTHONPATH=$PYTHONPATH:/usr/lib/ambari-server/lib /usr/sbin/ambari-server.py setup-security \
       --security-option=import-certificate \
       --truststore-path=/var/lib/ambari-server/keys/cacerts.jks \
       --truststore-type=jks \
       --truststore-password=123456 \
       --import-cert-path=/etc/pki/ca-trust/source/anchors/activedirectory.pem \
       --import-cert-alias=activedirectory \
       --truststore-reconfigure
  become_user: root

- name: Restart ambari-server
  service:
    name: ambari-server
    state: restarted

- name: Wait for Ambari Server to start listening on port 8080
  wait_for:
    port: 8080
    host: 0.0.0.0
    delay: 1    
 
- name: extract jce policy ##### got error on artifacts_dest
  shell: unzip -o -j -q {{artifacts_dest}}jce_policy-8.zip -d {{postgres_java_rootfolder}}{{postgres_java_folder}}
  become_user: root
  
- name: Restart ambari-server
  service:
    name: ambari-server
    state: restarted

- name: Wait for Ambari Server to start listening on port 8080
  wait_for:
    port: 8080
    host: 0.0.0.0
    delay: 1    
  